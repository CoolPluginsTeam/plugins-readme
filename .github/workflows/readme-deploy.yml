name: Convert and Deploy Updated Readmes

on:
  push:
    branches:
      - main
    paths:
      - '**/*.md'

jobs:
  deploy-readmes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Detect Changed Markdown Files
        id: detect_changes
        shell: bash
        run: |
          set -e
          echo "Detecting changed .md files..."

          if ! git rev-parse HEAD^ >/dev/null 2>&1; then
            echo "No parent commit found. Skipping detection."
            echo "changed_files=" >> $GITHUB_ENV
            exit 0
          fi

          BASE_SHA=$(git rev-parse HEAD^)
          HEAD_SHA=$(git rev-parse HEAD)

          md_files=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -E '\.md$' || true)
          if [ -z "$md_files" ]; then
            echo "No changed .md files found."
            echo "changed_files=" >> $GITHUB_ENV
            exit 0
          fi

          changed_files_val=$(echo "$md_files" | paste -sd "," -)
          echo "changed_files=$changed_files_val" >> $GITHUB_ENV
          echo "Detected changed .md files: $changed_files_val"

      - name: Convert and Deploy Changed Markdown Files
        if: env.changed_files != ''
        env:
          changed_files: ${{ env.changed_files }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Starting conversion and deployment..."

          IFS=',' read -ra FILES <<< "$changed_files"

          for FILE in "${FILES[@]}"; do
            echo "----------------------------------------"
            echo "Processing file: $FILE"

            if [ ! -f "$FILE" ]; then
              echo "❌ File not found: $FILE"
              continue
            fi

            sed -i -E 's/^\s*\\= */= /; s/\\?(=+)\\?/\1/g; s/\\$//' "$FILE"


            TXT_FILE="readme.txt"
            cp "$FILE" "$TXT_FILE"

            FOLDER=$(dirname "$FILE")
            REPO_NAME=$(basename "${FILE%.md}")

            DEST_REPO="https://x-access-token:${{ secrets.COOL_README_TOKEN }}@github.com/CoolPluginsTeam/${REPO_NAME}.git"
            TEMP_DIR="temp-${REPO_NAME}"

            echo "Cloning destination repo: $DEST_REPO"
            if ! git clone --depth 1 --branch readme_update "$DEST_REPO" "$TEMP_DIR"; then
              echo "❌ Failed to clone repo: $DEST_REPO"
              continue
            fi

            echo "✅ Cloned into: $TEMP_DIR"
            cp "$TXT_FILE" "$TEMP_DIR/$(basename "$TXT_FILE")" || {
              echo "❌ Failed to copy $TXT_FILE"
              continue
            }

            cd "$TEMP_DIR"
            git config user.name "github-actions"
            git config user.email "actions@github.com"

            git add "$(basename "$TXT_FILE")"
            if git diff --cached --quiet; then
              echo "ℹ️ No changes to commit."
            else
              git commit -m "Update $(basename "$TXT_FILE") from .md source"
              if git push origin readme_update; then
                echo "✅ Pushed to readme_update."
              else
                echo "❌ Push failed for $REPO_NAME"
              fi
            fi

            cd ..
            rm -rf "$TEMP_DIR"
            echo "✅ Cleaned up $TEMP_DIR"
            echo "----------------------------------------"
          done
